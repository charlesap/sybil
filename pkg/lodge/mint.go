package lodge

import (

	"github.com/nofeaturesonlybugs/z85"
)



func ZeroBody () Body {
	return Body { 0, Btlen { 0, 0, 0 }, Btext {
		32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
		32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
		32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
		32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
		32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
		32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
		32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
		32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32}}
}

func ZeroKnod () Knod {

	return Knod {
	0,
	0,
	0,
	Kdate {0,0,0,0,0},
	Hash {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	Hash {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	0,
	Kndx {0,0,0,0,0,0},
	Kndx {0,0,0,0,0,0},
	Slst {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	0,
	Kndx {0,0,0,0,0,0},
	Kndx {0,0,0,0,0,0},
	Slst {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	Sign {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}

}

func MintLabel(s string) (Knod, Body) { // mints a universal label from a string up to 252 characters in length

	k:= ZeroKnod()
	b:= ZeroBody()
	k.Op = 1
	b.Mode = 254
	l := len(s)
	b.Len[0]=byte(l%256) // bytes 1 and 2 will be zero
	for i:=0;i<l && i < 252; i++ {
		b.Text[i]=s[i]
	}
	return k,b
}

func MintWorld(p Knod) (Knod) { // The world is tagged with the World label and is contained by nothing and refers to nothing

	w := ZeroKnod()
	w.Op = 1
	//update tag field here
	return w
}

func MintCategory(p Knod, s string) (c Knod) { // mints a category record for a principal

	return c
}

func MintDay(l Knod) (d Knod) { // mints a day record for a principal log with the current date

	return d
}

// temporacles have null Hr, all other principals have an Hr pointing to a timestamp generated by a temporacle

func MintPrincipal(pub, priv []byte) (Knod, Knod, Body, Knod, Body) { // mints a principal entity from an ed25519 private key and an ed25519 public key

	k0:= ZeroKnod()
	k0.Op = TEMPO //4

	k1:= ZeroKnod()
	b1:= ZeroBody()
	k1.Op = INTRO //2
	b1.Mode = BODY0 //254

//	pub, priv, _ := ed25519.GenerateKey(rand.Reader)
	pub85, _ := z85.Encode(pub[:])
	priv85, _ := z85.Encode(priv[:])

	l := len(pub85)
	b1.Len[0]=byte(l%256) // bytes 1 and 2 will be zero
	for i:=0;i<l && i < 252; i++ {
		b1.Text[i]=pub85[i]
	}

	k2:= ZeroKnod()
	b2:= ZeroBody()
	k2.Op = PRIVT //3
	b2.Mode = BODY0 //254

	l = len(priv85)
	b2.Len[0]=byte(l%256) // bytes 1 and 2 will be zero
	for i:=0;i<l && i < 252; i++ {
		b2.Text[i]=priv85[i]
	}


	return k0,k1,b1,k2,b2
}

